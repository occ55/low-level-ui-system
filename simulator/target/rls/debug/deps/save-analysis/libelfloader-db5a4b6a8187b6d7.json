{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"/home/onurcan/.cargo/registry/src/github.com-1ecc6299db9ec823/elfloader-0.10.0","program":"/home/onurcan/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","elfloader","--edition=2018","/home/onurcan/.cargo/registry/src/github.com-1ecc6299db9ec823/elfloader-0.10.0/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-Cembed-bitcode=no","-C","debuginfo=2","-C","metadata=db5a4b6a8187b6d7","-C","extra-filename=-db5a4b6a8187b6d7","--out-dir","/home/onurcan/riscv-c/simulator/target/rls/debug/deps","-L","dependency=/home/onurcan/riscv-c/simulator/target/rls/debug/deps","--extern","bitflags=/home/onurcan/riscv-c/simulator/target/rls/debug/deps/libbitflags-e08d508a294dced4.rmeta","--extern","log=/home/onurcan/riscv-c/simulator/target/rls/debug/deps/liblog-22abff9bcdc52662.rmeta","--extern","xmas_elf=/home/onurcan/riscv-c/simulator/target/rls/debug/deps/libxmas_elf-0944e50087ea8099.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/home/onurcan/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu"],"output":"/home/onurcan/riscv-c/simulator/target/rls/debug/deps/libelfloader-db5a4b6a8187b6d7.rmeta"},"prelude":{"crate_id":{"name":"elfloader","disambiguator":[7835132943124449262,3632443002111555480]},"crate_root":"/home/onurcan/.cargo/registry/src/github.com-1ecc6299db9ec823/elfloader-0.10.0/src","external_crates":[{"file_name":"/home/onurcan/.cargo/registry/src/github.com-1ecc6299db9ec823/elfloader-0.10.0/src/lib.rs","num":1,"id":{"name":"core","disambiguator":[7623152156312283121,2838623298767507782]}},{"file_name":"/home/onurcan/.cargo/registry/src/github.com-1ecc6299db9ec823/elfloader-0.10.0/src/lib.rs","num":2,"id":{"name":"compiler_builtins","disambiguator":[12763060671047272378,6168867873858235804]}},{"file_name":"/home/onurcan/.cargo/registry/src/github.com-1ecc6299db9ec823/elfloader-0.10.0/src/lib.rs","num":3,"id":{"name":"rustc_std_workspace_core","disambiguator":[7318645639700950485,15238163179688231211]}},{"file_name":"/home/onurcan/.cargo/registry/src/github.com-1ecc6299db9ec823/elfloader-0.10.0/src/lib.rs","num":4,"id":{"name":"bitflags","disambiguator":[4594003256273766007,17273285224194669277]}},{"file_name":"/home/onurcan/.cargo/registry/src/github.com-1ecc6299db9ec823/elfloader-0.10.0/src/lib.rs","num":5,"id":{"name":"log","disambiguator":[314966868543912034,18263173538012669945]}},{"file_name":"/home/onurcan/.cargo/registry/src/github.com-1ecc6299db9ec823/elfloader-0.10.0/src/lib.rs","num":6,"id":{"name":"cfg_if","disambiguator":[3932844045235505680,9317420268335607203]}},{"file_name":"/home/onurcan/.cargo/registry/src/github.com-1ecc6299db9ec823/elfloader-0.10.0/src/lib.rs","num":7,"id":{"name":"xmas_elf","disambiguator":[1270328688018899286,17443335344160564953]}},{"file_name":"/home/onurcan/.cargo/registry/src/github.com-1ecc6299db9ec823/elfloader-0.10.0/src/lib.rs","num":8,"id":{"name":"zero","disambiguator":[11061248309210453800,12546091424514614874]}}],"span":{"file_name":"/home/onurcan/.cargo/registry/src/github.com-1ecc6299db9ec823/elfloader-0.10.0/src/lib.rs","byte_start":0,"byte_end":22074,"line_start":1,"line_end":667,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":7,"index":999},"span":{"file_name":"/home/onurcan/.cargo/registry/src/github.com-1ecc6299db9ec823/elfloader-0.10.0/src/lib.rs","byte_start":432,"byte_end":437,"line_start":23,"line_end":23,"column_start":29,"column_end":34},"alias_span":null,"name":"Flags","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":7,"index":924},"span":{"file_name":"/home/onurcan/.cargo/registry/src/github.com-1ecc6299db9ec823/elfloader-0.10.0/src/lib.rs","byte_start":439,"byte_end":452,"line_start":23,"line_end":23,"column_start":36,"column_end":49},"alias_span":null,"name":"ProgramHeader","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":7,"index":956},"span":{"file_name":"/home/onurcan/.cargo/registry/src/github.com-1ecc6299db9ec823/elfloader-0.10.0/src/lib.rs","byte_start":454,"byte_end":469,"line_start":23,"line_end":23,"column_start":51,"column_end":66},"alias_span":null,"name":"ProgramHeader64","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":7,"index":891},"span":{"file_name":"/home/onurcan/.cargo/registry/src/github.com-1ecc6299db9ec823/elfloader-0.10.0/src/lib.rs","byte_start":500,"byte_end":504,"line_start":24,"line_end":24,"column_start":29,"column_end":33},"alias_span":null,"name":"Rela","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":7,"index":273},"span":{"file_name":"/home/onurcan/.cargo/registry/src/github.com-1ecc6299db9ec823/elfloader-0.10.0/src/lib.rs","byte_start":539,"byte_end":544,"line_start":25,"line_end":25,"column_start":34,"column_end":39},"alias_span":null,"name":"Entry","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":7,"index":1104},"span":{"file_name":"/home/onurcan/.cargo/registry/src/github.com-1ecc6299db9ec823/elfloader-0.10.0/src/lib.rs","byte_start":546,"byte_end":553,"line_start":25,"line_end":25,"column_start":41,"column_end":48},"alias_span":null,"name":"Entry64","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":7,"index":354},"span":{"file_name":"/home/onurcan/.cargo/registry/src/github.com-1ecc6299db9ec823/elfloader-0.10.0/src/lib.rs","byte_start":575,"byte_end":578,"line_start":26,"line_end":26,"column_start":20,"column_end":23},"alias_span":null,"name":"P32","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":7,"index":355},"span":{"file_name":"/home/onurcan/.cargo/registry/src/github.com-1ecc6299db9ec823/elfloader-0.10.0/src/lib.rs","byte_start":580,"byte_end":583,"line_start":26,"line_end":26,"column_start":25,"column_end":28},"alias_span":null,"name":"P64","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/onurcan/.cargo/registry/src/github.com-1ecc6299db9ec823/elfloader-0.10.0/src/lib.rs","byte_start":0,"byte_end":22074,"line_start":1,"line_end":667,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/home/onurcan/.cargo/registry/src/github.com-1ecc6299db9ec823/elfloader-0.10.0/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":5},{"krate":0,"index":6},{"krate":0,"index":7},{"krate":0,"index":8},{"krate":0,"index":9},{"krate":0,"index":10},{"krate":0,"index":14},{"krate":0,"index":15},{"krate":0,"index":16},{"krate":0,"index":20},{"krate":0,"index":21},{"krate":0,"index":24},{"krate":0,"index":27},{"krate":0,"index":28},{"krate":0,"index":31},{"krate":0,"index":32},{"krate":0,"index":71},{"krate":0,"index":132},{"krate":0,"index":133},{"krate":0,"index":128},{"krate":0,"index":129},{"krate":0,"index":126},{"krate":0,"index":124},{"krate":0,"index":123},{"krate":0,"index":33},{"krate":0,"index":135},{"krate":0,"index":158},{"krate":0,"index":157},{"krate":0,"index":153},{"krate":0,"index":154},{"krate":0,"index":150},{"krate":0,"index":151},{"krate":0,"index":148},{"krate":0,"index":142},{"krate":0,"index":140},{"krate":0,"index":137},{"krate":0,"index":160},{"krate":0,"index":192},{"krate":0,"index":194},{"krate":0,"index":196},{"krate":0,"index":198},{"krate":0,"index":200},{"krate":0,"index":234},{"krate":0,"index":237},{"krate":0,"index":239},{"krate":0,"index":242},{"krate":0,"index":244},{"krate":0,"index":247},{"krate":0,"index":249},{"krate":0,"index":252},{"krate":0,"index":254},{"krate":0,"index":257},{"krate":0,"index":260},{"krate":0,"index":36},{"krate":0,"index":40},{"krate":0,"index":45},{"krate":0,"index":48},{"krate":0,"index":54}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"no_std","span":{"file_name":"/home/onurcan/.cargo/registry/src/github.com-1ecc6299db9ec823/elfloader-0.10.0/src/lib.rs","byte_start":0,"byte_end":10,"line_start":1,"line_end":1,"column_start":1,"column_end":11}},{"value":"crate_name = \"elfloader\"","span":{"file_name":"/home/onurcan/.cargo/registry/src/github.com-1ecc6299db9ec823/elfloader-0.10.0/src/lib.rs","byte_start":11,"byte_end":39,"line_start":2,"line_end":2,"column_start":1,"column_end":29}},{"value":"crate_type = \"lib\"","span":{"file_name":"/home/onurcan/.cargo/registry/src/github.com-1ecc6299db9ec823/elfloader-0.10.0/src/lib.rs","byte_start":40,"byte_end":62,"line_start":3,"line_end":3,"column_start":1,"column_end":23}}]},{"kind":"Type","id":{"krate":0,"index":28},"span":{"file_name":"/home/onurcan/.cargo/registry/src/github.com-1ecc6299db9ec823/elfloader-0.10.0/src/lib.rs","byte_start":621,"byte_end":636,"line_start":30,"line_end":30,"column_start":10,"column_end":25},"name":"LoadableHeaders","qualname":"::LoadableHeaders","value":"Filter<ProgramIter<'a, 'b>, fn(&ProgramHeader) -> bool>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":31},"span":{"file_name":"/home/onurcan/.cargo/registry/src/github.com-1ecc6299db9ec823/elfloader-0.10.0/src/lib.rs","byte_start":713,"byte_end":718,"line_start":31,"line_end":31,"column_start":10,"column_end":15},"name":"PAddr","qualname":"::PAddr","value":"u64","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":32},"span":{"file_name":"/home/onurcan/.cargo/registry/src/github.com-1ecc6299db9ec823/elfloader-0.10.0/src/lib.rs","byte_start":735,"byte_end":740,"line_start":32,"line_end":32,"column_start":10,"column_end":15},"name":"VAddr","qualname":"::VAddr","value":"u64","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":72},"span":{"file_name":"/home/onurcan/.cargo/registry/src/github.com-1ecc6299db9ec823/elfloader-0.10.0/src/lib.rs","byte_start":959,"byte_end":965,"line_start":40,"line_end":40,"column_start":5,"column_end":11},"name":"R_NONE","qualname":"::TypeRela64::R_NONE","value":"TypeRela64::R_NONE","parent":{"krate":0,"index":71},"children":[],"decl_id":null,"docs":" No relocation.\n","sig":null,"attributes":[{"value":"/ No relocation.","span":{"file_name":"/home/onurcan/.cargo/registry/src/github.com-1ecc6299db9ec823/elfloader-0.10.0/src/lib.rs","byte_start":936,"byte_end":954,"line_start":39,"line_end":39,"column_start":5,"column_end":23}}]},{"kind":"TupleVariant","id":{"krate":0,"index":74},"span":{"file_name":"/home/onurcan/.cargo/registry/src/github.com-1ecc6299db9ec823/elfloader-0.10.0/src/lib.rs","byte_start":1004,"byte_end":1008,"line_start":42,"line_end":42,"column_start":5,"column_end":9},"name":"R_64","qualname":"::TypeRela64::R_64","value":"TypeRela64::R_64","parent":{"krate":0,"index":71},"children":[],"decl_id":null,"docs":" Add 64 bit symbol value.\n","sig":null,"attributes":[{"value":"/ Add 64 bit symbol value.","span":{"file_name":"/home/onurcan/.cargo/registry/src/github.com-1ecc6299db9ec823/elfloader-0.10.0/src/lib.rs","byte_start":971,"byte_end":999,"line_start":41,"line_end":41,"column_start":5,"column_end":33}}]},{"kind":"TupleVariant","id":{"krate":0,"index":76},"span":{"file_name":"/home/onurcan/.cargo/registry/src/github.com-1ecc6299db9ec823/elfloader-0.10.0/src/lib.rs","byte_start":1059,"byte_end":1065,"line_start":44,"line_end":44,"column_start":5,"column_end":11},"name":"R_PC32","qualname":"::TypeRela64::R_PC32","value":"TypeRela64::R_PC32","parent":{"krate":0,"index":71},"children":[],"decl_id":null,"docs":" PC-relative 32 bit signed sym value.\n","sig":null,"attributes":[{"value":"/ PC-relative 32 bit signed sym value.","span":{"file_name":"/home/onurcan/.cargo/registry/src/github.com-1ecc6299db9ec823/elfloader-0.10.0/src/lib.rs","byte_start":1014,"byte_end":1054,"line_start":43,"line_end":43,"column_start":5,"column_end":45}}]},{"kind":"TupleVariant","id":{"krate":0,"index":78},"span":{"file_name":"/home/onurcan/.cargo/registry/src/github.com-1ecc6299db9ec823/elfloader-0.10.0/src/lib.rs","byte_start":1110,"byte_end":1117,"line_start":46,"line_end":46,"column_start":5,"column_end":12},"name":"R_GOT32","qualname":"::TypeRela64::R_GOT32","value":"TypeRela64::R_GOT32","parent":{"krate":0,"index":71},"children":[],"decl_id":null,"docs":" PC-relative 32 bit GOT offset.\n","sig":null,"attributes":[{"value":"/ PC-relative 32 bit GOT offset.","span":{"file_name":"/home/onurcan/.cargo/registry/src/github.com-1ecc6299db9ec823/elfloader-0.10.0/src/lib.rs","byte_start":1071,"byte_end":1105,"line_start":45,"line_end":45,"column_start":5,"column_end":39}}]},{"kind":"TupleVariant","id":{"krate":0,"index":80},"span":{"file_name":"/home/onurcan/.cargo/registry/src/github.com-1ecc6299db9ec823/elfloader-0.10.0/src/lib.rs","byte_start":1162,"byte_end":1169,"line_start":48,"line_end":48,"column_start":5,"column_end":12},"name":"R_PLT32","qualname":"::TypeRela64::R_PLT32","value":"TypeRela64::R_PLT32","parent":{"krate":0,"index":71},"children":[],"decl_id":null,"docs":" PC-relative 32 bit PLT offset.\n","sig":null,"attributes":[{"value":"/ PC-relative 32 bit PLT offset.","span":{"file_name":"/home/onurcan/.cargo/registry/src/github.com-1ecc6299db9ec823/elfloader-0.10.0/src/lib.rs","byte_start":1123,"byte_end":1157,"line_start":47,"line_end":47,"column_start":5,"column_end":39}}]},{"kind":"TupleVariant","id":{"krate":0,"index":82},"span":{"file_name":"/home/onurcan/.cargo/registry/src/github.com-1ecc6299db9ec823/elfloader-0.10.0/src/lib.rs","byte_start":1213,"byte_end":1219,"line_start":50,"line_end":50,"column_start":5,"column_end":11},"name":"R_COPY","qualname":"::TypeRela64::R_COPY","value":"TypeRela64::R_COPY","parent":{"krate":0,"index":71},"children":[],"decl_id":null,"docs":" Copy data from shared object.\n","sig":null,"attributes":[{"value":"/ Copy data from shared object.","span":{"file_name":"/home/onurcan/.cargo/registry/src/github.com-1ecc6299db9ec823/elfloader-0.10.0/src/lib.rs","byte_start":1175,"byte_end":1208,"line_start":49,"line_end":49,"column_start":5,"column_end":38}}]},{"kind":"TupleVariant","id":{"krate":0,"index":84},"span":{"file_name":"/home/onurcan/.cargo/registry/src/github.com-1ecc6299db9ec823/elfloader-0.10.0/src/lib.rs","byte_start":1264,"byte_end":1274,"line_start":52,"line_end":52,"column_start":5,"column_end":15},"name":"R_GLOB_DAT","qualname":"::TypeRela64::R_GLOB_DAT","value":"TypeRela64::R_GLOB_DAT","parent":{"krate":0,"index":71},"children":[],"decl_id":null,"docs":" Set GOT entry to data address.\n","sig":null,"attributes":[{"value":"/ Set GOT entry to data address.","span":{"file_name":"/home/onurcan/.cargo/registry/src/github.com-1ecc6299db9ec823/elfloader-0.10.0/src/lib.rs","byte_start":1225,"byte_end":1259,"line_start":51,"line_end":51,"column_start":5,"column_end":39}}]},{"kind":"TupleVariant","id":{"krate":0,"index":86},"span":{"file_name":"/home/onurcan/.cargo/registry/src/github.com-1ecc6299db9ec823/elfloader-0.10.0/src/lib.rs","byte_start":1319,"byte_end":1329,"line_start":54,"line_end":54,"column_start":5,"column_end":15},"name":"R_JMP_SLOT","qualname":"::TypeRela64::R_JMP_SLOT","value":"TypeRela64::R_JMP_SLOT","parent":{"krate":0,"index":71},"children":[],"decl_id":null,"docs":" Set GOT entry to code address.\n","sig":null,"attributes":[{"value":"/ Set GOT entry to code address.","span":{"file_name":"/home/onurcan/.cargo/registry/src/github.com-1ecc6299db9ec823/elfloader-0.10.0/src/lib.rs","byte_start":1280,"byte_end":1314,"line_start":53,"line_end":53,"column_start":5,"column_end":39}}]},{"kind":"TupleVariant","id":{"krate":0,"index":88},"span":{"file_name":"/home/onurcan/.cargo/registry/src/github.com-1ecc6299db9ec823/elfloader-0.10.0/src/lib.rs","byte_start":1378,"byte_end":1388,"line_start":56,"line_end":56,"column_start":5,"column_end":15},"name":"R_RELATIVE","qualname":"::TypeRela64::R_RELATIVE","value":"TypeRela64::R_RELATIVE","parent":{"krate":0,"index":71},"children":[],"decl_id":null,"docs":" Add load address of shared object.\n","sig":null,"attributes":[{"value":"/ Add load address of shared object.","span":{"file_name":"/home/onurcan/.cargo/registry/src/github.com-1ecc6299db9ec823/elfloader-0.10.0/src/lib.rs","byte_start":1335,"byte_end":1373,"line_start":55,"line_end":55,"column_start":5,"column_end":43}}]},{"kind":"TupleVariant","id":{"krate":0,"index":90},"span":{"file_name":"/home/onurcan/.cargo/registry/src/github.com-1ecc6299db9ec823/elfloader-0.10.0/src/lib.rs","byte_start":1441,"byte_end":1451,"line_start":58,"line_end":58,"column_start":5,"column_end":15},"name":"R_GOTPCREL","qualname":"::TypeRela64::R_GOTPCREL","value":"TypeRela64::R_GOTPCREL","parent":{"krate":0,"index":71},"children":[],"decl_id":null,"docs":" Add 32 bit signed pcrel offset to GOT.\n","sig":null,"attributes":[{"value":"/ Add 32 bit signed pcrel offset to GOT.","span":{"file_name":"/home/onurcan/.cargo/registry/src/github.com-1ecc6299db9ec823/elfloader-0.10.0/src/lib.rs","byte_start":1394,"byte_end":1436,"line_start":57,"line_end":57,"column_start":5,"column_end":47}}]},{"kind":"TupleVariant","id":{"krate":0,"index":92},"span":{"file_name":"/home/onurcan/.cargo/registry/src/github.com-1ecc6299db9ec823/elfloader-0.10.0/src/lib.rs","byte_start":1503,"byte_end":1507,"line_start":60,"line_end":60,"column_start":5,"column_end":9},"name":"R_32","qualname":"::TypeRela64::R_32","value":"TypeRela64::R_32","parent":{"krate":0,"index":71},"children":[],"decl_id":null,"docs":" Add 32 bit zero extended symbol value\n","sig":null,"attributes":[{"value":"/ Add 32 bit zero extended symbol value","span":{"file_name":"/home/onurcan/.cargo/registry/src/github.com-1ecc6299db9ec823/elfloader-0.10.0/src/lib.rs","byte_start":1457,"byte_end":1498,"line_start":59,"line_end":59,"column_start":5,"column_end":46}}]},{"kind":"TupleVariant","id":{"krate":0,"index":94},"span":{"file_name":"/home/onurcan/.cargo/registry/src/github.com-1ecc6299db9ec823/elfloader-0.10.0/src/lib.rs","byte_start":1559,"byte_end":1564,"line_start":62,"line_end":62,"column_start":5,"column_end":10},"name":"R_32S","qualname":"::TypeRela64::R_32S","value":"TypeRela64::R_32S","parent":{"krate":0,"index":71},"children":[],"decl_id":null,"docs":" Add 32 bit sign extended symbol value\n","sig":null,"attributes":[{"value":"/ Add 32 bit sign extended symbol value","span":{"file_name":"/home/onurcan/.cargo/registry/src/github.com-1ecc6299db9ec823/elfloader-0.10.0/src/lib.rs","byte_start":1513,"byte_end":1554,"line_start":61,"line_end":61,"column_start":5,"column_end":46}}]},{"kind":"TupleVariant","id":{"krate":0,"index":96},"span":{"file_name":"/home/onurcan/.cargo/registry/src/github.com-1ecc6299db9ec823/elfloader-0.10.0/src/lib.rs","byte_start":1616,"byte_end":1620,"line_start":64,"line_end":64,"column_start":5,"column_end":9},"name":"R_16","qualname":"::TypeRela64::R_16","value":"TypeRela64::R_16","parent":{"krate":0,"index":71},"children":[],"decl_id":null,"docs":" Add 16 bit zero extended symbol value\n","sig":null,"attributes":[{"value":"/ Add 16 bit zero extended symbol value","span":{"file_name":"/home/onurcan/.cargo/registry/src/github.com-1ecc6299db9ec823/elfloader-0.10.0/src/lib.rs","byte_start":1570,"byte_end":1611,"line_start":63,"line_end":63,"column_start":5,"column_end":46}}]},{"kind":"TupleVariant","id":{"krate":0,"index":98},"span":{"file_name":"/home/onurcan/.cargo/registry/src/github.com-1ecc6299db9ec823/elfloader-0.10.0/src/lib.rs","byte_start":1686,"byte_end":1692,"line_start":66,"line_end":66,"column_start":5,"column_end":11},"name":"R_PC16","qualname":"::TypeRela64::R_PC16","value":"TypeRela64::R_PC16","parent":{"krate":0,"index":71},"children":[],"decl_id":null,"docs":" Add 16 bit signed extended pc relative symbol value\n","sig":null,"attributes":[{"value":"/ Add 16 bit signed extended pc relative symbol value","span":{"file_name":"/home/onurcan/.cargo/registry/src/github.com-1ecc6299db9ec823/elfloader-0.10.0/src/lib.rs","byte_start":1626,"byte_end":1681,"line_start":65,"line_end":65,"column_start":5,"column_end":60}}]},{"kind":"TupleVariant","id":{"krate":0,"index":100},"span":{"file_name":"/home/onurcan/.cargo/registry/src/github.com-1ecc6299db9ec823/elfloader-0.10.0/src/lib.rs","byte_start":1743,"byte_end":1746,"line_start":68,"line_end":68,"column_start":5,"column_end":8},"name":"R_8","qualname":"::TypeRela64::R_8","value":"TypeRela64::R_8","parent":{"krate":0,"index":71},"children":[],"decl_id":null,"docs":" Add 8 bit zero extended symbol value\n","sig":null,"attributes":[{"value":"/ Add 8 bit zero extended symbol value","span":{"file_name":"/home/onurcan/.cargo/registry/src/github.com-1ecc6299db9ec823/elfloader-0.10.0/src/lib.rs","byte_start":1698,"byte_end":1738,"line_start":67,"line_end":67,"column_start":5,"column_end":45}}]},{"kind":"TupleVariant","id":{"krate":0,"index":102},"span":{"file_name":"/home/onurcan/.cargo/registry/src/github.com-1ecc6299db9ec823/elfloader-0.10.0/src/lib.rs","byte_start":1811,"byte_end":1816,"line_start":70,"line_end":70,"column_start":5,"column_end":10},"name":"R_PC8","qualname":"::TypeRela64::R_PC8","value":"TypeRela64::R_PC8","parent":{"krate":0,"index":71},"children":[],"decl_id":null,"docs":" Add 8 bit signed extended pc relative symbol value\n","sig":null,"attributes":[{"value":"/ Add 8 bit signed extended pc relative symbol value","span":{"file_name":"/home/onurcan/.cargo/registry/src/github.com-1ecc6299db9ec823/elfloader-0.10.0/src/lib.rs","byte_start":1752,"byte_end":1806,"line_start":69,"line_end":69,"column_start":5,"column_end":59}}]},{"kind":"TupleVariant","id":{"krate":0,"index":104},"span":{"file_name":"/home/onurcan/.cargo/registry/src/github.com-1ecc6299db9ec823/elfloader-0.10.0/src/lib.rs","byte_start":1861,"byte_end":1871,"line_start":72,"line_end":72,"column_start":5,"column_end":15},"name":"R_DTPMOD64","qualname":"::TypeRela64::R_DTPMOD64","value":"TypeRela64::R_DTPMOD64","parent":{"krate":0,"index":71},"children":[],"decl_id":null,"docs":" ID of module containing symbol\n","sig":null,"attributes":[{"value":"/ ID of module containing symbol","span":{"file_name":"/home/onurcan/.cargo/registry/src/github.com-1ecc6299db9ec823/elfloader-0.10.0/src/lib.rs","byte_start":1822,"byte_end":1856,"line_start":71,"line_end":71,"column_start":5,"column_end":39}}]},{"kind":"TupleVariant","id":{"krate":0,"index":106},"span":{"file_name":"/home/onurcan/.cargo/registry/src/github.com-1ecc6299db9ec823/elfloader-0.10.0/src/lib.rs","byte_start":1905,"byte_end":1915,"line_start":74,"line_end":74,"column_start":5,"column_end":15},"name":"R_DTPOFF64","qualname":"::TypeRela64::R_DTPOFF64","value":"TypeRela64::R_DTPOFF64","parent":{"krate":0,"index":71},"children":[],"decl_id":null,"docs":" Offset in TLS block\n","sig":null,"attributes":[{"value":"/ Offset in TLS block","span":{"file_name":"/home/onurcan/.cargo/registry/src/github.com-1ecc6299db9ec823/elfloader-0.10.0/src/lib.rs","byte_start":1877,"byte_end":1900,"line_start":73,"line_end":73,"column_start":5,"column_end":28}}]},{"kind":"TupleVariant","id":{"krate":0,"index":108},"span":{"file_name":"/home/onurcan/.cargo/registry/src/github.com-1ecc6299db9ec823/elfloader-0.10.0/src/lib.rs","byte_start":1956,"byte_end":1965,"line_start":76,"line_end":76,"column_start":5,"column_end":14},"name":"R_TPOFF64","qualname":"::TypeRela64::R_TPOFF64","value":"TypeRela64::R_TPOFF64","parent":{"krate":0,"index":71},"children":[],"decl_id":null,"docs":" Offset in static TLS block\n","sig":null,"attributes":[{"value":"/ Offset in static TLS block","span":{"file_name":"/home/onurcan/.cargo/registry/src/github.com-1ecc6299db9ec823/elfloader-0.10.0/src/lib.rs","byte_start":1921,"byte_end":1951,"line_start":75,"line_end":75,"column_start":5,"column_end":35}}]},{"kind":"TupleVariant","id":{"krate":0,"index":110},"span":{"file_name":"/home/onurcan/.cargo/registry/src/github.com-1ecc6299db9ec823/elfloader-0.10.0/src/lib.rs","byte_start":2014,"byte_end":2021,"line_start":78,"line_end":78,"column_start":5,"column_end":12},"name":"R_TLSGD","qualname":"::TypeRela64::R_TLSGD","value":"TypeRela64::R_TLSGD","parent":{"krate":0,"index":71},"children":[],"decl_id":null,"docs":" PC relative offset to GD GOT entry\n","sig":null,"attributes":[{"value":"/ PC relative offset to GD GOT entry","span":{"file_name":"/home/onurcan/.cargo/registry/src/github.com-1ecc6299db9ec823/elfloader-0.10.0/src/lib.rs","byte_start":1971,"byte_end":2009,"line_start":77,"line_end":77,"column_start":5,"column_end":43}}]},{"kind":"TupleVariant","id":{"krate":0,"index":112},"span":{"file_name":"/home/onurcan/.cargo/registry/src/github.com-1ecc6299db9ec823/elfloader-0.10.0/src/lib.rs","byte_start":2070,"byte_end":2077,"line_start":80,"line_end":80,"column_start":5,"column_end":12},"name":"R_TLSLD","qualname":"::TypeRela64::R_TLSLD","value":"TypeRela64::R_TLSLD","parent":{"krate":0,"index":71},"children":[],"decl_id":null,"docs":" PC relative offset to LD GOT entry\n","sig":null,"attributes":[{"value":"/ PC relative offset to LD GOT entry","span":{"file_name":"/home/onurcan/.cargo/registry/src/github.com-1ecc6299db9ec823/elfloader-0.10.0/src/lib.rs","byte_start":2027,"byte_end":2065,"line_start":79,"line_end":79,"column_start":5,"column_end":43}}]},{"kind":"TupleVariant","id":{"krate":0,"index":114},"span":{"file_name":"/home/onurcan/.cargo/registry/src/github.com-1ecc6299db9ec823/elfloader-0.10.0/src/lib.rs","byte_start":2111,"byte_end":2121,"line_start":82,"line_end":82,"column_start":5,"column_end":15},"name":"R_DTPOFF32","qualname":"::TypeRela64::R_DTPOFF32","value":"TypeRela64::R_DTPOFF32","parent":{"krate":0,"index":71},"children":[],"decl_id":null,"docs":" Offset in TLS block\n","sig":null,"attributes":[{"value":"/ Offset in TLS block","span":{"file_name":"/home/onurcan/.cargo/registry/src/github.com-1ecc6299db9ec823/elfloader-0.10.0/src/lib.rs","byte_start":2083,"byte_end":2106,"line_start":81,"line_end":81,"column_start":5,"column_end":28}}]},{"kind":"TupleVariant","id":{"krate":0,"index":116},"span":{"file_name":"/home/onurcan/.cargo/registry/src/github.com-1ecc6299db9ec823/elfloader-0.10.0/src/lib.rs","byte_start":2170,"byte_end":2180,"line_start":84,"line_end":84,"column_start":5,"column_end":15},"name":"R_GOTTPOFF","qualname":"::TypeRela64::R_GOTTPOFF","value":"TypeRela64::R_GOTTPOFF","parent":{"krate":0,"index":71},"children":[],"decl_id":null,"docs":" PC relative offset to IE GOT entry\n","sig":null,"attributes":[{"value":"/ PC relative offset to IE GOT entry","span":{"file_name":"/home/onurcan/.cargo/registry/src/github.com-1ecc6299db9ec823/elfloader-0.10.0/src/lib.rs","byte_start":2127,"byte_end":2165,"line_start":83,"line_end":83,"column_start":5,"column_end":43}}]},{"kind":"TupleVariant","id":{"krate":0,"index":118},"span":{"file_name":"/home/onurcan/.cargo/registry/src/github.com-1ecc6299db9ec823/elfloader-0.10.0/src/lib.rs","byte_start":2221,"byte_end":2230,"line_start":86,"line_end":86,"column_start":5,"column_end":14},"name":"R_TPOFF32","qualname":"::TypeRela64::R_TPOFF32","value":"TypeRela64::R_TPOFF32","parent":{"krate":0,"index":71},"children":[],"decl_id":null,"docs":" Offset in static TLS block\n","sig":null,"attributes":[{"value":"/ Offset in static TLS block","span":{"file_name":"/home/onurcan/.cargo/registry/src/github.com-1ecc6299db9ec823/elfloader-0.10.0/src/lib.rs","byte_start":2186,"byte_end":2216,"line_start":85,"line_end":85,"column_start":5,"column_end":35}}]},{"kind":"TupleVariant","id":{"krate":0,"index":120},"span":{"file_name":"/home/onurcan/.cargo/registry/src/github.com-1ecc6299db9ec823/elfloader-0.10.0/src/lib.rs","byte_start":2251,"byte_end":2258,"line_start":88,"line_end":88,"column_start":5,"column_end":12},"name":"Unknown","qualname":"::TypeRela64::Unknown","value":"TypeRela64::Unknown(u32)","parent":{"krate":0,"index":71},"children":[],"decl_id":null,"docs":" Unkown\n","sig":null,"attributes":[{"value":"/ Unkown","span":{"file_name":"/home/onurcan/.cargo/registry/src/github.com-1ecc6299db9ec823/elfloader-0.10.0/src/lib.rs","byte_start":2236,"byte_end":2246,"line_start":87,"line_end":87,"column_start":5,"column_end":15}}]},{"kind":"Enum","id":{"krate":0,"index":71},"span":{"file_name":"/home/onurcan/.cargo/registry/src/github.com-1ecc6299db9ec823/elfloader-0.10.0/src/lib.rs","byte_start":919,"byte_end":929,"line_start":38,"line_end":38,"column_start":10,"column_end":20},"name":"TypeRela64","qualname":"::TypeRela64","value":"TypeRela64::{R_NONE, R_64, R_PC32, R_GOT32, R_PLT32, R_COPY, R_GLOB_DAT, R_JMP_SLOT, R_RELATIVE, R_GOTPCREL, R_32, R_32S, R_16, R_PC16, R_8, R_PC8, R_DTPMOD64, R_DTPOFF64, R_TPOFF64, R_TLSGD, R_TLSLD, R_DTPOFF32, R_GOTTPOFF, R_TPOFF32, Unknown}","parent":null,"children":[{"krate":0,"index":72},{"krate":0,"index":74},{"krate":0,"index":76},{"krate":0,"index":78},{"krate":0,"index":80},{"krate":0,"index":82},{"krate":0,"index":84},{"krate":0,"index":86},{"krate":0,"index":88},{"krate":0,"index":90},{"krate":0,"index":92},{"krate":0,"index":94},{"krate":0,"index":96},{"krate":0,"index":98},{"krate":0,"index":100},{"krate":0,"index":102},{"krate":0,"index":104},{"krate":0,"index":106},{"krate":0,"index":108},{"krate":0,"index":110},{"krate":0,"index":112},{"krate":0,"index":114},{"krate":0,"index":116},{"krate":0,"index":118},{"krate":0,"index":120}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_camel_case_types)","span":{"file_name":"/home/onurcan/.cargo/registry/src/github.com-1ecc6299db9ec823/elfloader-0.10.0/src/lib.rs","byte_start":866,"byte_end":896,"line_start":36,"line_end":36,"column_start":1,"column_end":31}},{"value":"repr(u32)","span":{"file_name":"/home/onurcan/.cargo/registry/src/github.com-1ecc6299db9ec823/elfloader-0.10.0/src/lib.rs","byte_start":897,"byte_end":909,"line_start":37,"line_end":37,"column_start":1,"column_end":13}}]},{"kind":"Method","id":{"krate":0,"index":34},"span":{"file_name":"/home/onurcan/.cargo/registry/src/github.com-1ecc6299db9ec823/elfloader-0.10.0/src/lib.rs","byte_start":2330,"byte_end":2334,"line_start":93,"line_end":93,"column_start":12,"column_end":16},"name":"from","qualname":"<TypeRela64>::from","value":"fn (typ: u32) -> TypeRela64","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":135},"span":{"file_name":"/home/onurcan/.cargo/registry/src/github.com-1ecc6299db9ec823/elfloader-0.10.0/src/lib.rs","byte_start":3151,"byte_end":3164,"line_start":127,"line_end":127,"column_start":16,"column_end":29},"name":"DynamicFlags1","qualname":"::DynamicFlags1","value":"DynamicFlags1 {  }","parent":null,"children":[{"krate":0,"index":136}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":201},"span":{"file_name":"/home/onurcan/.cargo/registry/src/github.com-1ecc6299db9ec823/elfloader-0.10.0/src/lib.rs","byte_start":3186,"byte_end":3189,"line_start":128,"line_end":128,"column_start":15,"column_end":18},"name":"NOW","qualname":"::DynamicFlags1::NOW","value":"DynamicFlags1","parent":{"krate":0,"index":200},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":202},"span":{"file_name":"/home/onurcan/.cargo/registry/src/github.com-1ecc6299db9ec823/elfloader-0.10.0/src/lib.rs","byte_start":3218,"byte_end":3224,"line_start":129,"line_end":129,"column_start":15,"column_end":21},"name":"GLOBAL","qualname":"::DynamicFlags1::GLOBAL","value":"DynamicFlags1","parent":{"krate":0,"index":200},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":203},"span":{"file_name":"/home/onurcan/.cargo/registry/src/github.com-1ecc6299db9ec823/elfloader-0.10.0/src/lib.rs","byte_start":3256,"byte_end":3261,"line_start":130,"line_end":130,"column_start":15,"column_end":20},"name":"GROUP","qualname":"::DynamicFlags1::GROUP","value":"DynamicFlags1","parent":{"krate":0,"index":200},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":204},"span":{"file_name":"/home/onurcan/.cargo/registry/src/github.com-1ecc6299db9ec823/elfloader-0.10.0/src/lib.rs","byte_start":3292,"byte_end":3300,"line_start":131,"line_end":131,"column_start":15,"column_end":23},"name":"NODELETE","qualname":"::DynamicFlags1::NODELETE","value":"DynamicFlags1","parent":{"krate":0,"index":200},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":205},"span":{"file_name":"/home/onurcan/.cargo/registry/src/github.com-1ecc6299db9ec823/elfloader-0.10.0/src/lib.rs","byte_start":3334,"byte_end":3342,"line_start":132,"line_end":132,"column_start":15,"column_end":23},"name":"LOADFLTR","qualname":"::DynamicFlags1::LOADFLTR","value":"DynamicFlags1","parent":{"krate":0,"index":200},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":206},"span":{"file_name":"/home/onurcan/.cargo/registry/src/github.com-1ecc6299db9ec823/elfloader-0.10.0/src/lib.rs","byte_start":3376,"byte_end":3385,"line_start":133,"line_end":133,"column_start":15,"column_end":24},"name":"INITFIRST","qualname":"::DynamicFlags1::INITFIRST","value":"DynamicFlags1","parent":{"krate":0,"index":200},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":207},"span":{"file_name":"/home/onurcan/.cargo/registry/src/github.com-1ecc6299db9ec823/elfloader-0.10.0/src/lib.rs","byte_start":3420,"byte_end":3426,"line_start":134,"line_end":134,"column_start":15,"column_end":21},"name":"NOOPEN","qualname":"::DynamicFlags1::NOOPEN","value":"DynamicFlags1","parent":{"krate":0,"index":200},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":208},"span":{"file_name":"/home/onurcan/.cargo/registry/src/github.com-1ecc6299db9ec823/elfloader-0.10.0/src/lib.rs","byte_start":3458,"byte_end":3464,"line_start":135,"line_end":135,"column_start":15,"column_end":21},"name":"ORIGIN","qualname":"::DynamicFlags1::ORIGIN","value":"DynamicFlags1","parent":{"krate":0,"index":200},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":209},"span":{"file_name":"/home/onurcan/.cargo/registry/src/github.com-1ecc6299db9ec823/elfloader-0.10.0/src/lib.rs","byte_start":3496,"byte_end":3502,"line_start":136,"line_end":136,"column_start":15,"column_end":21},"name":"DIRECT","qualname":"::DynamicFlags1::DIRECT","value":"DynamicFlags1","parent":{"krate":0,"index":200},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":210},"span":{"file_name":"/home/onurcan/.cargo/registry/src/github.com-1ecc6299db9ec823/elfloader-0.10.0/src/lib.rs","byte_start":3534,"byte_end":3539,"line_start":137,"line_end":137,"column_start":15,"column_end":20},"name":"TRANS","qualname":"::DynamicFlags1::TRANS","value":"DynamicFlags1","parent":{"krate":0,"index":200},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":211},"span":{"file_name":"/home/onurcan/.cargo/registry/src/github.com-1ecc6299db9ec823/elfloader-0.10.0/src/lib.rs","byte_start":3570,"byte_end":3579,"line_start":138,"line_end":138,"column_start":15,"column_end":24},"name":"INTERPOSE","qualname":"::DynamicFlags1::INTERPOSE","value":"DynamicFlags1","parent":{"krate":0,"index":200},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":212},"span":{"file_name":"/home/onurcan/.cargo/registry/src/github.com-1ecc6299db9ec823/elfloader-0.10.0/src/lib.rs","byte_start":3614,"byte_end":3622,"line_start":139,"line_end":139,"column_start":15,"column_end":23},"name":"NODEFLIB","qualname":"::DynamicFlags1::NODEFLIB","value":"DynamicFlags1","parent":{"krate":0,"index":200},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":213},"span":{"file_name":"/home/onurcan/.cargo/registry/src/github.com-1ecc6299db9ec823/elfloader-0.10.0/src/lib.rs","byte_start":3656,"byte_end":3662,"line_start":140,"line_end":140,"column_start":15,"column_end":21},"name":"NODUMP","qualname":"::DynamicFlags1::NODUMP","value":"DynamicFlags1","parent":{"krate":0,"index":200},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":214},"span":{"file_name":"/home/onurcan/.cargo/registry/src/github.com-1ecc6299db9ec823/elfloader-0.10.0/src/lib.rs","byte_start":3694,"byte_end":3701,"line_start":141,"line_end":141,"column_start":15,"column_end":22},"name":"CONFALT","qualname":"::DynamicFlags1::CONFALT","value":"DynamicFlags1","parent":{"krate":0,"index":200},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":215},"span":{"file_name":"/home/onurcan/.cargo/registry/src/github.com-1ecc6299db9ec823/elfloader-0.10.0/src/lib.rs","byte_start":3734,"byte_end":3743,"line_start":142,"line_end":142,"column_start":15,"column_end":24},"name":"ENDFILTEE","qualname":"::DynamicFlags1::ENDFILTEE","value":"DynamicFlags1","parent":{"krate":0,"index":200},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":216},"span":{"file_name":"/home/onurcan/.cargo/registry/src/github.com-1ecc6299db9ec823/elfloader-0.10.0/src/lib.rs","byte_start":3778,"byte_end":3788,"line_start":143,"line_end":143,"column_start":15,"column_end":25},"name":"DISPRELDNE","qualname":"::DynamicFlags1::DISPRELDNE","value":"DynamicFlags1","parent":{"krate":0,"index":200},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":217},"span":{"file_name":"/home/onurcan/.cargo/registry/src/github.com-1ecc6299db9ec823/elfloader-0.10.0/src/lib.rs","byte_start":3824,"byte_end":3834,"line_start":144,"line_end":144,"column_start":15,"column_end":25},"name":"DISPRELPND","qualname":"::DynamicFlags1::DISPRELPND","value":"DynamicFlags1","parent":{"krate":0,"index":200},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":218},"span":{"file_name":"/home/onurcan/.cargo/registry/src/github.com-1ecc6299db9ec823/elfloader-0.10.0/src/lib.rs","byte_start":3870,"byte_end":3878,"line_start":145,"line_end":145,"column_start":15,"column_end":23},"name":"NODIRECT","qualname":"::DynamicFlags1::NODIRECT","value":"DynamicFlags1","parent":{"krate":0,"index":200},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":219},"span":{"file_name":"/home/onurcan/.cargo/registry/src/github.com-1ecc6299db9ec823/elfloader-0.10.0/src/lib.rs","byte_start":3912,"byte_end":3921,"line_start":146,"line_end":146,"column_start":15,"column_end":24},"name":"IGNMULDEF","qualname":"::DynamicFlags1::IGNMULDEF","value":"DynamicFlags1","parent":{"krate":0,"index":200},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":220},"span":{"file_name":"/home/onurcan/.cargo/registry/src/github.com-1ecc6299db9ec823/elfloader-0.10.0/src/lib.rs","byte_start":3956,"byte_end":3963,"line_start":147,"line_end":147,"column_start":15,"column_end":22},"name":"NOKSYMS","qualname":"::DynamicFlags1::NOKSYMS","value":"DynamicFlags1","parent":{"krate":0,"index":200},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":221},"span":{"file_name":"/home/onurcan/.cargo/registry/src/github.com-1ecc6299db9ec823/elfloader-0.10.0/src/lib.rs","byte_start":3996,"byte_end":4001,"line_start":148,"line_end":148,"column_start":15,"column_end":20},"name":"NOHDR","qualname":"::DynamicFlags1::NOHDR","value":"DynamicFlags1","parent":{"krate":0,"index":200},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":222},"span":{"file_name":"/home/onurcan/.cargo/registry/src/github.com-1ecc6299db9ec823/elfloader-0.10.0/src/lib.rs","byte_start":4032,"byte_end":4038,"line_start":149,"line_end":149,"column_start":15,"column_end":21},"name":"EDITED","qualname":"::DynamicFlags1::EDITED","value":"DynamicFlags1","parent":{"krate":0,"index":200},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":223},"span":{"file_name":"/home/onurcan/.cargo/registry/src/github.com-1ecc6299db9ec823/elfloader-0.10.0/src/lib.rs","byte_start":4070,"byte_end":4077,"line_start":150,"line_end":150,"column_start":15,"column_end":22},"name":"NORELOC","qualname":"::DynamicFlags1::NORELOC","value":"DynamicFlags1","parent":{"krate":0,"index":200},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":224},"span":{"file_name":"/home/onurcan/.cargo/registry/src/github.com-1ecc6299db9ec823/elfloader-0.10.0/src/lib.rs","byte_start":4110,"byte_end":4120,"line_start":151,"line_end":151,"column_start":15,"column_end":25},"name":"SYMINTPOSE","qualname":"::DynamicFlags1::SYMINTPOSE","value":"DynamicFlags1","parent":{"krate":0,"index":200},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":225},"span":{"file_name":"/home/onurcan/.cargo/registry/src/github.com-1ecc6299db9ec823/elfloader-0.10.0/src/lib.rs","byte_start":4156,"byte_end":4165,"line_start":152,"line_end":152,"column_start":15,"column_end":24},"name":"GLOBAUDIT","qualname":"::DynamicFlags1::GLOBAUDIT","value":"DynamicFlags1","parent":{"krate":0,"index":200},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":226},"span":{"file_name":"/home/onurcan/.cargo/registry/src/github.com-1ecc6299db9ec823/elfloader-0.10.0/src/lib.rs","byte_start":4200,"byte_end":4209,"line_start":153,"line_end":153,"column_start":15,"column_end":24},"name":"SINGLETON","qualname":"::DynamicFlags1::SINGLETON","value":"DynamicFlags1","parent":{"krate":0,"index":200},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":227},"span":{"file_name":"/home/onurcan/.cargo/registry/src/github.com-1ecc6299db9ec823/elfloader-0.10.0/src/lib.rs","byte_start":4244,"byte_end":4248,"line_start":154,"line_end":154,"column_start":15,"column_end":19},"name":"STUB","qualname":"::DynamicFlags1::STUB","value":"DynamicFlags1","parent":{"krate":0,"index":200},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":228},"span":{"file_name":"/home/onurcan/.cargo/registry/src/github.com-1ecc6299db9ec823/elfloader-0.10.0/src/lib.rs","byte_start":4278,"byte_end":4281,"line_start":155,"line_end":155,"column_start":15,"column_end":18},"name":"PIE","qualname":"::DynamicFlags1::PIE","value":"DynamicFlags1","parent":{"krate":0,"index":200},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":36},"span":{"file_name":"/home/onurcan/.cargo/registry/src/github.com-1ecc6299db9ec823/elfloader-0.10.0/src/lib.rs","byte_start":4364,"byte_end":4375,"line_start":160,"line_end":160,"column_start":12,"column_end":23},"name":"DynamicInfo","qualname":"::DynamicInfo","value":"DynamicInfo { flags1, rela, rela_size }","parent":null,"children":[{"krate":0,"index":37},{"krate":0,"index":38},{"krate":0,"index":39}],"decl_id":null,"docs":" Information parse from the .dynamic section\n","sig":null,"attributes":[{"value":"/ Information parse from the .dynamic section","span":{"file_name":"/home/onurcan/.cargo/registry/src/github.com-1ecc6299db9ec823/elfloader-0.10.0/src/lib.rs","byte_start":4305,"byte_end":4352,"line_start":159,"line_end":159,"column_start":1,"column_end":48}}]},{"kind":"Field","id":{"krate":0,"index":37},"span":{"file_name":"/home/onurcan/.cargo/registry/src/github.com-1ecc6299db9ec823/elfloader-0.10.0/src/lib.rs","byte_start":4386,"byte_end":4392,"line_start":161,"line_end":161,"column_start":9,"column_end":15},"name":"flags1","qualname":"::DynamicInfo::flags1","value":"DynamicFlags1","parent":{"krate":0,"index":36},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":38},"span":{"file_name":"/home/onurcan/.cargo/registry/src/github.com-1ecc6299db9ec823/elfloader-0.10.0/src/lib.rs","byte_start":4417,"byte_end":4421,"line_start":162,"line_end":162,"column_start":9,"column_end":13},"name":"rela","qualname":"::DynamicInfo::rela","value":"u64","parent":{"krate":0,"index":36},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":39},"span":{"file_name":"/home/onurcan/.cargo/registry/src/github.com-1ecc6299db9ec823/elfloader-0.10.0/src/lib.rs","byte_start":4436,"byte_end":4445,"line_start":163,"line_end":163,"column_start":9,"column_end":18},"name":"rela_size","qualname":"::DynamicInfo::rela_size","value":"u64","parent":{"krate":0,"index":36},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":40},"span":{"file_name":"/home/onurcan/.cargo/registry/src/github.com-1ecc6299db9ec823/elfloader-0.10.0/src/lib.rs","byte_start":4520,"byte_end":4529,"line_start":167,"line_end":167,"column_start":12,"column_end":21},"name":"ElfBinary","qualname":"::ElfBinary","value":"ElfBinary { file, dynamic }","parent":null,"children":[{"krate":0,"index":42},{"krate":0,"index":43},{"krate":0,"index":44}],"decl_id":null,"docs":" Abstract representation of a loadable ELF binary.\n","sig":null,"attributes":[{"value":"/ Abstract representation of a loadable ELF binary.","span":{"file_name":"/home/onurcan/.cargo/registry/src/github.com-1ecc6299db9ec823/elfloader-0.10.0/src/lib.rs","byte_start":4455,"byte_end":4508,"line_start":166,"line_end":166,"column_start":1,"column_end":54}}]},{"kind":"Field","id":{"krate":0,"index":43},"span":{"file_name":"/home/onurcan/.cargo/registry/src/github.com-1ecc6299db9ec823/elfloader-0.10.0/src/lib.rs","byte_start":4632,"byte_end":4636,"line_start":171,"line_end":171,"column_start":9,"column_end":13},"name":"file","qualname":"::ElfBinary::file","value":"xmas_elf::ElfFile<'s>","parent":{"krate":0,"index":40},"children":[],"decl_id":null,"docs":" The ELF file in question.\n","sig":null,"attributes":[{"value":"/ The ELF file in question.","span":{"file_name":"/home/onurcan/.cargo/registry/src/github.com-1ecc6299db9ec823/elfloader-0.10.0/src/lib.rs","byte_start":4594,"byte_end":4623,"line_start":170,"line_end":170,"column_start":5,"column_end":34}}]},{"kind":"Field","id":{"krate":0,"index":44},"span":{"file_name":"/home/onurcan/.cargo/registry/src/github.com-1ecc6299db9ec823/elfloader-0.10.0/src/lib.rs","byte_start":4736,"byte_end":4743,"line_start":173,"line_end":173,"column_start":9,"column_end":16},"name":"dynamic","qualname":"::ElfBinary::dynamic","value":"core::option::Option<DynamicInfo>","parent":{"krate":0,"index":40},"children":[],"decl_id":null,"docs":" Parsed information from the .dynamic section (if the binary has it).\n","sig":null,"attributes":[{"value":"/ Parsed information from the .dynamic section (if the binary has it).","span":{"file_name":"/home/onurcan/.cargo/registry/src/github.com-1ecc6299db9ec823/elfloader-0.10.0/src/lib.rs","byte_start":4655,"byte_end":4727,"line_start":172,"line_end":172,"column_start":5,"column_end":77}}]},{"kind":"Trait","id":{"krate":0,"index":48},"span":{"file_name":"/home/onurcan/.cargo/registry/src/github.com-1ecc6299db9ec823/elfloader-0.10.0/src/lib.rs","byte_start":5409,"byte_end":5418,"line_start":192,"line_end":192,"column_start":11,"column_end":20},"name":"ElfLoader","qualname":"::ElfLoader","value":"ElfLoader","parent":null,"children":[{"krate":0,"index":49},{"krate":0,"index":50},{"krate":0,"index":51},{"krate":0,"index":52},{"krate":0,"index":53}],"decl_id":null,"docs":" Implement this trait for customized ELF loading.","sig":null,"attributes":[{"value":"/ Implement this trait for customized ELF loading.","span":{"file_name":"/home/onurcan/.cargo/registry/src/github.com-1ecc6299db9ec823/elfloader-0.10.0/src/lib.rs","byte_start":5050,"byte_end":5102,"line_start":186,"line_end":186,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/onurcan/.cargo/registry/src/github.com-1ecc6299db9ec823/elfloader-0.10.0/src/lib.rs","byte_start":5103,"byte_end":5106,"line_start":187,"line_end":187,"column_start":1,"column_end":4}},{"value":"/ The flow of ElfBinary is that it first calls `allocate` for all regions","span":{"file_name":"/home/onurcan/.cargo/registry/src/github.com-1ecc6299db9ec823/elfloader-0.10.0/src/lib.rs","byte_start":5107,"byte_end":5182,"line_start":188,"line_end":188,"column_start":1,"column_end":76}},{"value":"/ that need to be allocated (i.e., the LOAD program headers of the ELF binary),","span":{"file_name":"/home/onurcan/.cargo/registry/src/github.com-1ecc6299db9ec823/elfloader-0.10.0/src/lib.rs","byte_start":5183,"byte_end":5264,"line_start":189,"line_end":189,"column_start":1,"column_end":82}},{"value":"/ then `load` will be called to fill the allocated regions, and finally","span":{"file_name":"/home/onurcan/.cargo/registry/src/github.com-1ecc6299db9ec823/elfloader-0.10.0/src/lib.rs","byte_start":5265,"byte_end":5338,"line_start":190,"line_end":190,"column_start":1,"column_end":74}},{"value":"/ `relocate` is called for every entry in the RELA table.","span":{"file_name":"/home/onurcan/.cargo/registry/src/github.com-1ecc6299db9ec823/elfloader-0.10.0/src/lib.rs","byte_start":5339,"byte_end":5398,"line_start":191,"line_end":191,"column_start":1,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":49},"span":{"file_name":"/home/onurcan/.cargo/registry/src/github.com-1ecc6299db9ec823/elfloader-0.10.0/src/lib.rs","byte_start":5498,"byte_end":5506,"line_start":194,"line_end":194,"column_start":8,"column_end":16},"name":"allocate","qualname":"::ElfLoader::allocate","value":"fn (&mut self, load_headers: LoadableHeaders) -> Result<(), &'static str>","parent":{"krate":0,"index":48},"children":[],"decl_id":null,"docs":" Allocates a virtual region of `size` bytes at address `base`.\n","sig":null,"attributes":[{"value":"/ Allocates a virtual region of `size` bytes at address `base`.","span":{"file_name":"/home/onurcan/.cargo/registry/src/github.com-1ecc6299db9ec823/elfloader-0.10.0/src/lib.rs","byte_start":5425,"byte_end":5490,"line_start":193,"line_end":193,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":50},"span":{"file_name":"/home/onurcan/.cargo/registry/src/github.com-1ecc6299db9ec823/elfloader-0.10.0/src/lib.rs","byte_start":5751,"byte_end":5755,"line_start":199,"line_end":199,"column_start":8,"column_end":12},"name":"load","qualname":"::ElfLoader::load","value":"fn (&mut self, base: VAddr, region: &[u8]) -> Result<(), &'static str>","parent":{"krate":0,"index":48},"children":[],"decl_id":null,"docs":" Copies `region` into memory starting at `base`.\n The caller makes sure that there was an `allocate` call previously\n to initialize the region.\n","sig":null,"attributes":[{"value":"/ Copies `region` into memory starting at `base`.","span":{"file_name":"/home/onurcan/.cargo/registry/src/github.com-1ecc6299db9ec823/elfloader-0.10.0/src/lib.rs","byte_start":5583,"byte_end":5634,"line_start":196,"line_end":196,"column_start":5,"column_end":56}},{"value":"/ The caller makes sure that there was an `allocate` call previously","span":{"file_name":"/home/onurcan/.cargo/registry/src/github.com-1ecc6299db9ec823/elfloader-0.10.0/src/lib.rs","byte_start":5639,"byte_end":5709,"line_start":197,"line_end":197,"column_start":5,"column_end":75}},{"value":"/ to initialize the region.","span":{"file_name":"/home/onurcan/.cargo/registry/src/github.com-1ecc6299db9ec823/elfloader-0.10.0/src/lib.rs","byte_start":5714,"byte_end":5743,"line_start":198,"line_end":198,"column_start":5,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":51},"span":{"file_name":"/home/onurcan/.cargo/registry/src/github.com-1ecc6299db9ec823/elfloader-0.10.0/src/lib.rs","byte_start":5929,"byte_end":5937,"line_start":203,"line_end":203,"column_start":8,"column_end":16},"name":"relocate","qualname":"::ElfLoader::relocate","value":"fn (&mut self, entry: &Rela<P64>) -> Result<(), &'static str>","parent":{"krate":0,"index":48},"children":[],"decl_id":null,"docs":" Request for the client to relocate the given `entry`\n within the loaded ELF file.\n","sig":null,"attributes":[{"value":"/ Request for the client to relocate the given `entry`","span":{"file_name":"/home/onurcan/.cargo/registry/src/github.com-1ecc6299db9ec823/elfloader-0.10.0/src/lib.rs","byte_start":5829,"byte_end":5885,"line_start":201,"line_end":201,"column_start":5,"column_end":61}},{"value":"/ within the loaded ELF file.","span":{"file_name":"/home/onurcan/.cargo/registry/src/github.com-1ecc6299db9ec823/elfloader-0.10.0/src/lib.rs","byte_start":5890,"byte_end":5921,"line_start":202,"line_end":202,"column_start":5,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":52},"span":{"file_name":"/home/onurcan/.cargo/registry/src/github.com-1ecc6299db9ec823/elfloader-0.10.0/src/lib.rs","byte_start":6072,"byte_end":6075,"line_start":206,"line_end":206,"column_start":8,"column_end":11},"name":"tls","qualname":"::ElfLoader::tls","value":"fn (&mut self, _tdata_start: VAddr, _tdata_length: u64, _total_size: u64, _align: u64) -> Result<(), &'static str>","parent":{"krate":0,"index":48},"children":[],"decl_id":null,"docs":" Inform client about where the initial TLS data is located.\n","sig":null,"attributes":[{"value":"/ Inform client about where the initial TLS data is located.","span":{"file_name":"/home/onurcan/.cargo/registry/src/github.com-1ecc6299db9ec823/elfloader-0.10.0/src/lib.rs","byte_start":6002,"byte_end":6064,"line_start":205,"line_end":205,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":53},"span":{"file_name":"/home/onurcan/.cargo/registry/src/github.com-1ecc6299db9ec823/elfloader-0.10.0/src/lib.rs","byte_start":6571,"byte_end":6584,"line_start":222,"line_end":222,"column_start":8,"column_end":21},"name":"make_readonly","qualname":"::ElfLoader::make_readonly","value":"fn (&mut self, _base: VAddr, _size: usize) -> Result<(), &'static str>","parent":{"krate":0,"index":48},"children":[],"decl_id":null,"docs":" In case there is a `.data.rel.ro` section we instruct the loader\n to change the passed offset to read-only (this is called after\n the relocate calls are completed).","sig":null,"attributes":[{"value":"/ In case there is a `.data.rel.ro` section we instruct the loader","span":{"file_name":"/home/onurcan/.cargo/registry/src/github.com-1ecc6299db9ec823/elfloader-0.10.0/src/lib.rs","byte_start":6262,"byte_end":6330,"line_start":216,"line_end":216,"column_start":5,"column_end":73}},{"value":"/ to change the passed offset to read-only (this is called after","span":{"file_name":"/home/onurcan/.cargo/registry/src/github.com-1ecc6299db9ec823/elfloader-0.10.0/src/lib.rs","byte_start":6335,"byte_end":6401,"line_start":217,"line_end":217,"column_start":5,"column_end":71}},{"value":"/ the relocate calls are completed).","span":{"file_name":"/home/onurcan/.cargo/registry/src/github.com-1ecc6299db9ec823/elfloader-0.10.0/src/lib.rs","byte_start":6406,"byte_end":6444,"line_start":218,"line_end":218,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/onurcan/.cargo/registry/src/github.com-1ecc6299db9ec823/elfloader-0.10.0/src/lib.rs","byte_start":6449,"byte_end":6452,"line_start":219,"line_end":219,"column_start":5,"column_end":8}},{"value":"/ Note: The default implementation is a no-op since this is","span":{"file_name":"/home/onurcan/.cargo/registry/src/github.com-1ecc6299db9ec823/elfloader-0.10.0/src/lib.rs","byte_start":6457,"byte_end":6518,"line_start":220,"line_end":220,"column_start":5,"column_end":66}},{"value":"/ not strictly necessary to implement.","span":{"file_name":"/home/onurcan/.cargo/registry/src/github.com-1ecc6299db9ec823/elfloader-0.10.0/src/lib.rs","byte_start":6523,"byte_end":6563,"line_start":221,"line_end":221,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":56},"span":{"file_name":"/home/onurcan/.cargo/registry/src/github.com-1ecc6299db9ec823/elfloader-0.10.0/src/lib.rs","byte_start":6746,"byte_end":6749,"line_start":229,"line_end":229,"column_start":12,"column_end":15},"name":"new","qualname":"<ElfBinary>::new","value":"fn (name: &'s str, region: &'s [u8]) -> Result<ElfBinary<'s>, &'static str>","parent":null,"children":[],"decl_id":null,"docs":" Create a new ElfBinary.\n","sig":null,"attributes":[{"value":"/ Create a new ElfBinary.","span":{"file_name":"/home/onurcan/.cargo/registry/src/github.com-1ecc6299db9ec823/elfloader-0.10.0/src/lib.rs","byte_start":6707,"byte_end":6734,"line_start":228,"line_end":228,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":57},"span":{"file_name":"/home/onurcan/.cargo/registry/src/github.com-1ecc6299db9ec823/elfloader-0.10.0/src/lib.rs","byte_start":7595,"byte_end":7601,"line_start":255,"line_end":255,"column_start":12,"column_end":18},"name":"is_pie","qualname":"<ElfBinary>::is_pie","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if the binary is compiled as position independent code or false otherwise.","sig":null,"attributes":[{"value":"/ Returns true if the binary is compiled as position independent code or false otherwise.","span":{"file_name":"/home/onurcan/.cargo/registry/src/github.com-1ecc6299db9ec823/elfloader-0.10.0/src/lib.rs","byte_start":7373,"byte_end":7464,"line_start":251,"line_end":251,"column_start":5,"column_end":96}},{"value":"/","span":{"file_name":"/home/onurcan/.cargo/registry/src/github.com-1ecc6299db9ec823/elfloader-0.10.0/src/lib.rs","byte_start":7469,"byte_end":7472,"line_start":252,"line_end":252,"column_start":5,"column_end":8}},{"value":"/ For the binary to be PIE it needs to have a .dynamic section with PIE set in the flags1","span":{"file_name":"/home/onurcan/.cargo/registry/src/github.com-1ecc6299db9ec823/elfloader-0.10.0/src/lib.rs","byte_start":7477,"byte_end":7568,"line_start":253,"line_end":253,"column_start":5,"column_end":96}},{"value":"/ field.","span":{"file_name":"/home/onurcan/.cargo/registry/src/github.com-1ecc6299db9ec823/elfloader-0.10.0/src/lib.rs","byte_start":7573,"byte_end":7583,"line_start":254,"line_end":254,"column_start":5,"column_end":15}}]},{"kind":"Method","id":{"krate":0,"index":59},"span":{"file_name":"/home/onurcan/.cargo/registry/src/github.com-1ecc6299db9ec823/elfloader-0.10.0/src/lib.rs","byte_start":7893,"byte_end":7904,"line_start":264,"line_end":264,"column_start":12,"column_end":23},"name":"entry_point","qualname":"<ElfBinary>::entry_point","value":"fn (&self) -> u64","parent":null,"children":[],"decl_id":null,"docs":" Return the entry point of the ELF file.","sig":null,"attributes":[{"value":"/ Return the entry point of the ELF file.","span":{"file_name":"/home/onurcan/.cargo/registry/src/github.com-1ecc6299db9ec823/elfloader-0.10.0/src/lib.rs","byte_start":7755,"byte_end":7798,"line_start":261,"line_end":261,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/onurcan/.cargo/registry/src/github.com-1ecc6299db9ec823/elfloader-0.10.0/src/lib.rs","byte_start":7803,"byte_end":7806,"line_start":262,"line_end":262,"column_start":5,"column_end":8}},{"value":"/ Note this may be zero in case of position independent executables.","span":{"file_name":"/home/onurcan/.cargo/registry/src/github.com-1ecc6299db9ec823/elfloader-0.10.0/src/lib.rs","byte_start":7811,"byte_end":7881,"line_start":263,"line_end":263,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":60},"span":{"file_name":"/home/onurcan/.cargo/registry/src/github.com-1ecc6299db9ec823/elfloader-0.10.0/src/lib.rs","byte_start":8029,"byte_end":8044,"line_start":269,"line_end":269,"column_start":12,"column_end":27},"name":"program_headers","qualname":"<ElfBinary>::program_headers","value":"fn (&self) -> ProgramIter","parent":null,"children":[],"decl_id":null,"docs":" Create a slice of the program headers.\n","sig":null,"attributes":[{"value":"/ Create a slice of the program headers.","span":{"file_name":"/home/onurcan/.cargo/registry/src/github.com-1ecc6299db9ec823/elfloader-0.10.0/src/lib.rs","byte_start":7975,"byte_end":8017,"line_start":268,"line_end":268,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":61},"span":{"file_name":"/home/onurcan/.cargo/registry/src/github.com-1ecc6299db9ec823/elfloader-0.10.0/src/lib.rs","byte_start":8157,"byte_end":8168,"line_start":274,"line_end":274,"column_start":12,"column_end":23},"name":"symbol_name","qualname":"<ElfBinary>::symbol_name","value":"fn (&self, symbol: &'s dyn Entry) -> &'s str","parent":null,"children":[],"decl_id":null,"docs":" Get the name of the sectione\n","sig":null,"attributes":[{"value":"/ Get the name of the sectione","span":{"file_name":"/home/onurcan/.cargo/registry/src/github.com-1ecc6299db9ec823/elfloader-0.10.0/src/lib.rs","byte_start":8113,"byte_end":8145,"line_start":273,"line_end":273,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":62},"span":{"file_name":"/home/onurcan/.cargo/registry/src/github.com-1ecc6299db9ec823/elfloader-0.10.0/src/lib.rs","byte_start":8333,"byte_end":8348,"line_start":279,"line_end":279,"column_start":12,"column_end":27},"name":"for_each_symbol","qualname":"<ElfBinary>::for_each_symbol","value":"fn <F> (&self, mut func: F) -> Result<(), &'static str>","parent":null,"children":[],"decl_id":null,"docs":" Enumerate all the symbols in the file\n","sig":null,"attributes":[{"value":"/ Enumerate all the symbols in the file","span":{"file_name":"/home/onurcan/.cargo/registry/src/github.com-1ecc6299db9ec823/elfloader-0.10.0/src/lib.rs","byte_start":8280,"byte_end":8321,"line_start":278,"line_end":278,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":68},"span":{"file_name":"/home/onurcan/.cargo/registry/src/github.com-1ecc6299db9ec823/elfloader-0.10.0/src/lib.rs","byte_start":13160,"byte_end":13164,"line_start":405,"line_end":405,"column_start":12,"column_end":16},"name":"load","qualname":"<ElfBinary>::load","value":"fn (&self, loader: &mut dyn ElfLoader) -> Result<(), &'static str>","parent":null,"children":[],"decl_id":null,"docs":" Processing the program headers and issue commands to loader.","sig":null,"attributes":[{"value":"/ Processing the program headers and issue commands to loader.","span":{"file_name":"/home/onurcan/.cargo/registry/src/github.com-1ecc6299db9ec823/elfloader-0.10.0/src/lib.rs","byte_start":12916,"byte_end":12980,"line_start":401,"line_end":401,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/onurcan/.cargo/registry/src/github.com-1ecc6299db9ec823/elfloader-0.10.0/src/lib.rs","byte_start":12985,"byte_end":12988,"line_start":402,"line_end":402,"column_start":5,"column_end":8}},{"value":"/ Will tell loader to create space in the address space / region where the","span":{"file_name":"/home/onurcan/.cargo/registry/src/github.com-1ecc6299db9ec823/elfloader-0.10.0/src/lib.rs","byte_start":12993,"byte_end":13069,"line_start":403,"line_end":403,"column_start":5,"column_end":81}},{"value":"/ header is supposed to go, then copy it there, and finally relocate it.","span":{"file_name":"/home/onurcan/.cargo/registry/src/github.com-1ecc6299db9ec823/elfloader-0.10.0/src/lib.rs","byte_start":13074,"byte_end":13148,"line_start":404,"line_end":404,"column_start":5,"column_end":79}}]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"/home/onurcan/.cargo/registry/src/github.com-1ecc6299db9ec823/elfloader-0.10.0/src/lib.rs","byte_start":2273,"byte_end":2283,"line_start":91,"line_end":91,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":34}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/home/onurcan/.cargo/registry/src/github.com-1ecc6299db9ec823/elfloader-0.10.0/src/lib.rs","byte_start":4793,"byte_end":4802,"line_start":176,"line_end":176,"column_start":25,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":47}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Inherent","span":{"file_name":"/home/onurcan/.cargo/registry/src/github.com-1ecc6299db9ec823/elfloader-0.10.0/src/lib.rs","byte_start":6687,"byte_end":6696,"line_start":227,"line_end":227,"column_start":10,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":56},{"krate":0,"index":57},{"krate":0,"index":59},{"krate":0,"index":60},{"krate":0,"index":61},{"krate":0,"index":62},{"krate":0,"index":64},{"krate":0,"index":65},{"krate":0,"index":67},{"krate":0,"index":68}],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":"/home/onurcan/.cargo/registry/src/github.com-1ecc6299db9ec823/elfloader-0.10.0/src/lib.rs","byte_start":2273,"byte_end":2283,"line_start":91,"line_end":91,"column_start":6,"column_end":16},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":71},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/onurcan/.cargo/registry/src/github.com-1ecc6299db9ec823/elfloader-0.10.0/src/lib.rs","byte_start":4793,"byte_end":4802,"line_start":176,"line_end":176,"column_start":25,"column_end":34},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":40},"to":{"krate":1,"index":6061}},{"span":{"file_name":"/home/onurcan/.cargo/registry/src/github.com-1ecc6299db9ec823/elfloader-0.10.0/src/lib.rs","byte_start":6687,"byte_end":6696,"line_start":227,"line_end":227,"column_start":10,"column_end":19},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":40},"to":{"krate":4294967295,"index":4294967295}}]}